FROM resin/%%RESIN_MACHINE_NAME%%-node:8

# install mongodb
ADD mongodb_3_0_14_core.tar.gz /usr/bin/
ADD mongodb_3_0_14_tools.tar.gz /usr/bin/
RUN groupadd -r mongodb && useradd -r -g mongodb mongodb
RUN mkdir -p \
    /data/db \
    /data/configdb \
    /var/log/mongodb \
&& chown -R mongodb:mongodb \
    /usr/bin/mongo* \
    /data/db \
    /data/configdb \
/var/log/mongodb
COPY ./docker-entrypoint.sh /
RUN ["chmod", "+x", "/docker-entrypoint.sh"]
# Expose ports
# - 27017: process
# - 28017: http
EXPOSE 27017
EXPOSE 28017
# Define mountable directories
VOLUME /data/db /data/configdb


# Install other apt deps
RUN apt-get update && apt-get install -y --no-install-recommends \
  apt-utils \
  clang \
  xserver-xorg-core \
  xserver-xorg-input-all \
  xserver-xorg-video-fbdev \
  xorg \
  libxcb-image0 \
  libxcb-util0 \
  xdg-utils \
  libdbus-1-dev \
  libgtk2.0-dev \
  libnotify-dev \
  libgnome-keyring-dev \
  libgconf2-dev \
  libasound2-dev \
  libcap-dev \
  libcups2-dev \
  libxtst-dev \
  libxss1 \
  libnss3-dev \
  libsmbclient \
  libssh-4 \
  fbset \
  libav-tools \
  libexpat-dev && rm -rf /var/lib/apt/lists/*

RUN echo "#!/bin/bash" > /etc/X11/xinit/xserverrc \
  && echo "" >> /etc/X11/xinit/xserverrc \
  && echo 'exec /usr/bin/X -s 0 dpms -nocursor -nolisten tcp "$@"' >> /etc/X11/xinit/xserverrc

# Move to app dir
WORKDIR /usr/src/app

# Move package.json to filesystem
COPY ./app/package.json ./

# Install npm modules for the application
RUN JOBS=MAX npm install --unsafe-perm --production && npm cache clean --force && \
  rm -rf /tmp/* && node_modules/.bin/electron-rebuild

# Move app to filesystem
COPY ./app ./

# install hyperion dependencies
RUN apt update && apt install -y \
    git cmake build-essential qtbase5-dev libqt5serialport5-dev \
    libusb-1.0-0-dev python3-dev libxrender-dev libavahi-core-dev \
    libavahi-compat-libdnssd-dev libraspberrypi-dev libqt4-dev \
    && apt-get clean && rm -rf /var/lib/apt/lists/*
# clone and build hyperion
RUN export FIRMWARE_DIR="raspberrypi-firmware" \
  && git clone --depth 1 https://github.com/raspberrypi/firmware.git "$FIRMWARE_DIR" \
  && cp -R "$FIRMWARE_DIR/hardfp/opt/" /opt \
  && export HYPERION_DIR="hyperion" \
  && git clone --recursive https://github.com/itsdsk/hyperion.git "$HYPERION_DIR" \
  && mkdir "$HYPERION_DIR/build" \
  && cd "$HYPERION_DIR/build" \
  && cmake -DCMAKE_BUILD_TYPE=Release -DPLATFORM="rpi" -Wno-dev .. \
  && make -j $(nproc) \
  && cp ./bin/hyperion-remote /usr/bin/ \
  && cp ./bin/hyperiond /usr/bin/

# install arduino deps
RUN apt-get update && apt-get install -y --no-install-recommends \
    arduino \
    g++ \
    gcc \
    usbutils \
    make \
	&& apt-get clean && rm -rf /var/lib/apt/lists/*
ENV ARDUINODIR /usr/share/arduino
ENV BOARD uno
# compile arduino
RUN cd arduino_display && make

# (CMS) Fixes kerberos issue
RUN apt-get update && apt-get install -y --no-install-recommends \
    libkrb5-dev && apt-get clean && rm -rf /var/lib/apt/lists/*
# install web server/cms
RUN cd /usr/src/app/cms && npm install \
    && npm cache clean --force \
    && rm -rf /tmp/*

# install nginx
RUN apt-get update && apt-get install -y --no-install-recommends \
    nginx && apt-get clean && rm -rf /var/lib/apt/lists/*

## uncomment if you want systemd
ENV INITSYSTEM on

# Start app
CMD ["bash", "/usr/src/app/start.sh"]
