extends ../layouts/default

mixin sketch(sketch)
	//- .sketch(data-ks-editable=editable(user, { list: 'Sketch', id: sketch.id })).media
	.sketch(data-ks-editable=editable(user, { list: 'Sketch', id: sketch.id }))
		//- h4.media-heading
		//- .panel-heading
		//- 	h3.panel-title= sketch.title
			//- a(href='/browse/sketch/' + sketch.slug + '?display=on')= sketch.title
		//- .media-middle
		.sketch-thumbnail
			//- a(href='/browse/sketch/' + sketch.slug + '?display=on')
			//- a(href='/api/sketch/' + sketch.id + '/play')
			.img-wrapper(style='position:relative')
				//- if sketch.image.exists
				//- 	img(src=sketch._.image.fit(300,300)).img-responsive
				if sketch.prefThumb
					- var imgThumb = '/view-static/'+sketch.localDir+'/'+sketch.prefThumb;
					//- img(src=imgThumb)
					div(class='sq-thumb-'+sketch.id, style="background-image:url('"+imgThumb+"')").sq-thumb
				else
					img(src="http://placehold.it/300x300").img-responsive
				.img-overlay(style='position:absolute;top:0;bottom:0;left:0;right:0;text-align:center')
					a(href='/api/sketch/' + sketch.id + '/play')
						button(type='submit').btn.btn-md Display
					a(href='/browse/sketch/' + sketch.slug)
						button(type='submit').btn.btn-md More
					// display led svgs
					//div(id='leds').list-group-item.led-svg
					//iframe(width="750px" height="750px" frameborder="0" scrolling="no" marginheight="0" marginwidth="0" src="/view-static/"+sketch.localDir).img-responsive
					//iframe(width="750px" height="750px" frameborder="0" scrolling="no" marginheight="0" marginwidth="0" src="/view-static/"+sketch.localDir).display-sketch

		//- .media-bottom
		//- .list-group
		//- 	//- a(href='/api/' + sketch.id + '/play').btn.btn-default Display
		//- 	a(href='/api/sketch/' + sketch.id + '/play').list-group-item.display-sketch Display
		//- 	if sketch.ipfsHash
		//- 		//- a(href='https://gateway.ipfs.io/ipfs/' + sketch.ipfsHash ).btn.btn-default Preview IPFS
		//- 		a(href='https://gateway.ipfs.io/ipfs/' + sketch.ipfsHash ).list-group-item Preview IPFS
		//- 	else
		//- 		//- a(href='/api/' + sketch.id + '/sync' ).btn.btn-default Sync to IPFS
		//- 		a(href='/api/sketch/' + sketch.id + '/sync' ).list-group-item Sync to IPFS
		//- 		//- a(href='/view-static/' + sketch.localDir ).btn.btn-default Preview Local
		//- 		a(href='/view-static/' + sketch.localDir ).list-group-item Preview Local
			//a(href='https://gateway.ipfs.io/ipns/' + sketch.ipnsHash ).btn.btn-default Preview IPNS
			//- h2.media-heading
			//- 	a(href='/browse/sketch/' + sketch.slug + '?display=on')= sketch.title
			//- p.lead.text-muted Posted 
			//- if sketch.publishedDate
			//- 	| on #{sketch._.publishedDate.format('MMMM Do, YYYY')} 
			//- if sketch.channels && sketch.channels.length
			//- 	| in 
			//- 	each channel, i in sketch.channels
			//- 		a(href='/browse/' + channel.key)= channel.name
			//- 		if i < sketch.channels.length - 1
			//- 			| , 
			//- 		else
			//- 			|  
			//- if sketch.author
			//- 	| by #{sketch.author.name.first}
		//p!= sketch.content.brief
		//if sketch.content.extended
		//	p.read-more: a(href='/browse/sketch/' + sketch.slug) Read more...

//- block intro
//- 	.container
//- 		h1= data.channel ? data.channel.name : 'Select a Sketch'

block content
	.container
		div(id='ledmap').led-map
	.container: .row 
		.col-sm-8.col-md-8
			if filters.channel && !data.channel 
				h3.text-muted Invalid channel. 
			else
				if data.sketches.results.length
					//- if data.sketches.totalPages > 1
					//- 	h4.text-weight-normal Showing 
					//- 		strong #{data.sketches.first}
					//- 		|  to 
					//- 		strong #{data.sketches.last}
					//- 		|  of 
					//- 		strong #{data.sketches.total}
					//- 		|  sketches.
					//- else
					//- 	h4.text-weight-normal Showing #{utils.plural(data.sketches.results.length, '* sketch')}.
					.row.browse
						style .img-overlay:before {content: ' ';display:block;height:50%;}
						style .sq-thumb {float:left;position: relative;width: 100%;padding-bottom : 100%;margin:0%;background-position:center center;background-repeat:no-repeat;background-size:cover;}
						each sketch in data.sketches.results
							.col-xs-4(style="padding: 1px;")
								+sketch(sketch)
				
					if data.sketches.totalPages > 1
						ul.pagination
							if data.sketches.previous
								li: a(href='?page=' + data.sketches.previous): span.glyphicon.glyphicon-chevron-left
							else
								li.disabled: a(href='?page=' + 1): span.glyphicon.glyphicon-chevron-left
							each p, i in data.sketches.pages
								li(class=data.sketches.currentPage == p ? 'active' : null)
									a(href='?page=' + (p == '...' ? (i ? data.sketches.totalPages : 1) : p ))= p
							if data.sketches.next
								li: a(href='?page=' + data.sketches.next): span.glyphicon.glyphicon-chevron-right
							else
								li.disabled: a(href='?page=' + data.sketches.totalPages): span.entypo.glyphicon.glyphicon-chevron-right
				else
					if data.channel
						h3.text-muted There are no sketches in the channel #{data.channel.name}.
					else
						h3.text-muted There are no sketches yet.
		if data.channels.length
			.col-sm-4.col-md-4
				//- a(href='/keystone/galleries?new').btn.btn-primary.pull-right= 'More'
				h4 Subscribed
				.list-group
					//- a(href='/browse', class=!data.channel ? 'active' : false).list-group-item All Channels
					each channel in data.channels
						a(href='/browse/' + channel.key, class=data.channel && data.channel.id == channel.id ? 'active' : false).list-group-item= channel.name
				hr
		.col-sm-4.col-md-4
			// top bar same as other panels
			h4.list-group-item LEDs
			// top left blue button
			//h4: h(href='').btn.btn-primary LEDs
			.list-group
				div(id='leds').list-group-item.led-svg
				p.list-group-item Brightness:
				input(type='range', min='0.0', max='1.0', step='0.01', value='1.0', class='slider', style='height:50px').list-group-item.brightnessSlider
				a(href='/keystone/galleries?new').btn.btn-primary.pull-right= 'More'
		//- .col-sm-4.col-md-4
		//- 	h4 Network
		//- 	div(id='leds')
block js
	script.
		jQuery(function($) {
			// play sketch button
			function playSketch(e) {
				console.log('hi')
				e.preventDefault();

				var url = $(this).attr('href');

				$.get(url, function() {
					// success
				});
			}
			$(".display-sketch").click( playSketch );

			// setbrightness slider
			function setBrightness() {
				var url = '/api/display/brightness/' + $(this).val();
				$.get(url, function() {
					// success
				});
			}
			$(".brightnessSlider").change( setBrightness );
		});

	script(src='https://d3js.org/d3.v5.js')

	script.

		d3.json('/config-static/leds.json').then(function(data) {

			var width = 1280,
				height = 720,
				padding = 15;
			
			var svgContainer = d3.selectAll('.led-map').append('svg')
				.attr('viewBox', '0 0 ' + width + ' ' + height);
				//- .attr("width", width)
				//- .attr("height", height);

			svgContainer.append('rect')
				.attr('width', '100%')
				.attr('height', '100%')
				.attr('fill', 'white');
				
			var minX = d3.min(data.leds, function(d) {return d.x});
			var maxX = d3.max(data.leds, function(d) {return d.x});
			var minY = d3.min(data.leds, function(d) {return d.y});
			var maxY = d3.max(data.leds, function(d) {return d.y});

			// flat line of points (same number as led map)
			var initCoords = [];
			for(var i=0; i<data.leds.length; i++){
				var initY = (minY+maxY)/2.0;
				var initX = minX + ((i/data.leds.length)*(maxX-minX));
				initCoords.push({'x': initX, 'y': initY});
			}

			var scaleX = d3.scaleLinear()
				.domain([minX,maxX])
				.range([padding, width-padding]);
			var scaleY = d3.scaleLinear()
				.domain([minY,maxY])
				.range([padding, height-padding]);

			var line = d3.line()
				.curve(d3.curveLinear)
				.x(function(d) { return scaleX(d.x); })
				.y(function(d) { return scaleY(d.y); });

			var path = svgContainer.append('path')
				.attr('fill', 'none')
				.attr('stroke', '#337ab7')
				.attr('stroke-width', 0.5*padding)
				.datum(initCoords)
				.attr('d', line)
				.transition()
				.duration(1000)
				.attrTween('d', function() {
					return d3.interpolate(line(initCoords), line(data.leds));
				});

			var circles = svgContainer.selectAll('circle')
				.data(data.leds)
				.enter()
				.append("circle")
				.attr('cx', function(d) { return scaleX(d.x); })
				.attr('cy', function(d) { return scaleY(d.y); })
				.attr('r', 0.0)
				.attr('stroke', '#337ab7')
				.attr('stroke-width', 0.33*padding)
				.attr('fill', 'white')
				.transition()
				.delay(750)
				.duration(250)
				.attr('r', function(d) { return 0.7*padding; });

		})

		//- d3.json('/config-static/leds.json').then(function(data) {

		//- 	var width = 500,
		//- 		height = 500,
		//- 		padding = 15;
			
		//- 	var svgContainer = d3.selectAll('.led-svg').append('svg')
		//- 		.attr('viewBox', '0 0 ' + width + ' ' + height);
		//- 		//- .attr("width", width)
		//- 		//- .attr("height", height);

		//- 	svgContainer.append('rect')
		//- 		.attr('width', '100%')
		//- 		.attr('height', '100%')
		//- 		.attr('fill', 'white');
				
		//- 	var minX = d3.min(data.leds, function(d) {return d.x});
		//- 	var maxX = d3.max(data.leds, function(d) {return d.x});
		//- 	var minY = d3.min(data.leds, function(d) {return d.y});
		//- 	var maxY = d3.max(data.leds, function(d) {return d.y});

		//- 	var scaleX = d3.scaleLinear()
		//- 		.domain([minX,maxX])
		//- 		.range([padding, width-padding]);
		//- 	var scaleY = d3.scaleLinear()
		//- 		.domain([minY,maxY])
		//- 		.range([padding, height-padding]);

		//- 	var line = d3.line()
		//- 		.curve(d3.curveLinear)
		//- 		.x(function(d) { return scaleX(d.x); })
		//- 		.y(function(d) { return scaleY(d.y); });

		//- 	var path = svgContainer.append('path')
		//- 		.attr('fill', 'none')
		//- 		.attr('stroke', '#337ab7')
		//- 		.attr('stroke-width', 0.5*padding)
		//- 		.attr('d', line(data.leds));

		//- 	var circles = svgContainer.selectAll('circle')
		//- 		.data(data.leds)
		//- 		.enter()
		//- 		.append("circle");

		//- 	var circleAttr = circles
		//- 		.attr('cx', function(d) { return scaleX(d.x); })
		//- 		.attr('cy', function(d) { return scaleY(d.y); })
		//- 		.attr('r', function(d) { return 0.7*padding; })
		//- 		.attr('stroke', '#337ab7')
		//- 		.attr('stroke-width', 0.33*padding)
		//- 		.attr('fill', 'white');


		//- })